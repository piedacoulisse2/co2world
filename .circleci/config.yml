version: 2
jobs:
  verify_python:
    docker:
      - image: circleci/python:3.6.12
    steps:
      - checkout
      - restore_cache:
          key: pip-{{ .Branch }}-{{ checksum "parsers/requirements.txt" }}
      - run:
          name: Upgrade pip
          command: sudo pip install -q --upgrade pip
      - run:
          command: |
            set -eux -o pipefail
            python --version
            pip -v --version
            sudo pip install --progress-bar=off -q flake8 pylint==2.4.4
            sudo apt-get install libxml2-dev tesseract-ocr tesseract-ocr-eng
            sudo pip install --progress-bar=off -q -r parsers/requirements.txt
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics
            # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
            # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
            pylint -E parsers/*.py -d unsubscriptable-object,unsupported-assignment-operation,unpacking-non-sequence
            python -m unittest discover parsers/test
            cd config && poetry install && poetry run test && poetry run lint
      - save_cache:
          key: pip-{{ .Branch }}-{{ checksum "parsers/requirements.txt" }}
          paths:
            - "~/.cache/pip"

  lint_json:
    docker:
      - image: circleci/node:12.13
    steps:
      - checkout
      - run:
          command: |
            sudo npm install -g jsonlint
            jsonlint config/*.json web/locales/*.json

  test_js:
    docker:
      - image: circleci/node:12.13
    steps:
      - checkout
      - run:
          command: |
            sudo npm install -g jest
            jest

  lint_js:
    docker:
      - image: circleci/node:12.13
    steps:
      - checkout
      - restore_cache:
          key: node_modules-{{ .Branch }}-{{ checksum "web/yarn.lock" }}
      - run:
          command: |
            set -eux -o pipefail
            pushd web
            yarn
            yarn lint
      - save_cache:
          key: node_modules-{{ .Branch }}-{{ checksum "web/yarn.lock" }}
          paths:
            - "web/node_modules"

  build_test:
    machine:
      image: circleci/classic:201808-01
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Build
          command: |
            set -euo pipefail
            docker-compose build
            # Make sure files are available outside of container
            CONTAINER_ID=$(docker create eu.gcr.io/tmrow-152415/electricitymap_web:latest)
            docker cp $CONTAINER_ID:/home/src/electricitymap/contrib/web/public/dist web/public/dist
          no_output_timeout: 30m
      - run:
          name: Start environment
          command: |
            set -euo pipefail
            # Only start the `web` and `mockserver` containers
            # and avoid the `watch` container from starting and compiling
            # the already built frontend
            docker-compose up -d web mockserver
            sleep 20
            docker-compose logs web
      - run:
          name: Run tests
          command: |
            docker-compose ps
            curl --fail -i http://localhost:8000/
            curl --fail -i http://localhost:8000/v1/co2?countryCode=FR
            curl --fail -i http://localhost:8000/v1/exchanges?countryCode=FR
            curl --fail -i http://localhost:8000/v1/production?countryCode=FR
            curl --fail -i http://localhost:8000/v1/price?countryCode=FR
            curl --fail -i http://localhost:8000/v2/history?countryCode=FR

workflows:
  version: 2
  all:
    jobs:
      - verify_python
      - lint_js
      - lint_json
      - test_js
      - build_test:
          requires:
            - lint_js
            - verify_python
            - lint_json
            - test_js
